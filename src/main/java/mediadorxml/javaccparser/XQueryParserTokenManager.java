/* Generated By:JJTree&JavaCC: Do not edit this line. XQueryParserTokenManager.java */
package mediadorxml.javaccparser;

public class XQueryParserTokenManager implements XQueryParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x200L) != 0L)
            return 0;
         if ((active1 & 0x4L) != 0L)
         {
            jjmatchedKind = 50;
            return 85;
         }
         if ((active0 & 0x2000000000L) != 0L)
            return 65;
         if ((active0 & 0x8000000000L) != 0L)
            return 202;
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 50;
            return 203;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 64;
         return -1;
      case 1:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 15;
            jjmatchedPos = 1;
            return 65;
         }
         return -1;
      case 2:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 2;
            return 65;
         }
         return -1;
      case 3:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 3;
            return 65;
         }
         return -1;
      case 4:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 4;
            return 65;
         }
         return -1;
      case 5:
         if ((active1 & 0x6L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 50;
               jjmatchedPos = 4;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active1 & 0x6L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 50;
               jjmatchedPos = 4;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L);
      case 34:
         return jjStartNfaWithStates_0(0, 39, 202);
      case 36:
         return jjStopAtPos(0, 29);
      case 39:
         return jjStopAtPos(0, 38);
      case 40:
         return jjStartNfaWithStates_0(0, 9, 0);
      case 41:
         return jjStopAtPos(0, 10);
      case 43:
         return jjStopAtPos(0, 19);
      case 44:
         return jjStopAtPos(0, 7);
      case 45:
         return jjStopAtPos(0, 20);
      case 47:
         jjmatchedKind = 27;
         return jjMoveStringLiteralDfa1_0(0x410000000L, 0x0L);
      case 58:
         return jjMoveStringLiteralDfa1_0(0x4000000L, 0x0L);
      case 59:
         return jjStopAtPos(0, 6);
      case 60:
         jjmatchedKind = 30;
         return jjMoveStringLiteralDfa1_0(0x180000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 8);
      case 62:
         jjmatchedKind = 33;
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x0L);
      case 64:
         return jjStartNfaWithStates_0(0, 42, 64);
      case 79:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4L);
      case 91:
         return jjStopAtPos(0, 11);
      case 93:
         return jjStopAtPos(0, 12);
      case 95:
         return jjStartNfaWithStates_0(0, 37, 65);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2L);
      case 123:
         return jjStopAtPos(0, 13);
      case 124:
         return jjStopAtPos(0, 17);
      case 125:
         return jjStopAtPos(0, 14);
      default :
         return jjMoveNfa_0(6, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(1, 28);
         else if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(1, 31);
         break;
      case 61:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 26);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(1, 32);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(1, 35);
         else if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 36);
         break;
      case 62:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 34);
         break;
      case 82:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 68:
         return jjMoveStringLiteralDfa3_0(active1, 0x4L);
      case 100:
         return jjMoveStringLiteralDfa3_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(1, 0L, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(1, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa4_0(active1, 0x4L);
      case 101:
         return jjMoveStringLiteralDfa4_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(2, 0L, active1);
}
private final int jjMoveStringLiteralDfa4_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(2, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 82:
         return jjMoveStringLiteralDfa5_0(active1, 0x4L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(3, 0L, active1);
}
private final int jjMoveStringLiteralDfa5_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(3, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa6_0(active1, 0x6L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, active1);
}
private final int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(4, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 66:
         return jjMoveStringLiteralDfa7_0(active1, 0x4L);
      case 98:
         return jjMoveStringLiteralDfa7_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
private final int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(5, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 89:
         if ((active1 & 0x4L) != 0L)
            return jjStopAtPos(7, 66);
         break;
      case 121:
         if ((active1 & 0x2L) != 0L)
            return jjStopAtPos(7, 65);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, active1);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec1 = {
   0x0L, 0xffffffffffffc000L, 0xfffff0007fffffffL, 0x7fffffL
};
static final long[] jjbitVec3 = {
   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec4 = {
   0x7ff3ffffffffffffL, 0x7ffffffffffffdfeL, 0xffffffffffffffffL, 0xfc31ffffffffe00fL
};
static final long[] jjbitVec5 = {
   0xffffffL, 0xffffffffffff0000L, 0xf80001ffffffffffL, 0x3L
};
static final long[] jjbitVec6 = {
   0x0L, 0x0L, 0xfffffffbffffd740L, 0xffffd547f7fffL
};
static final long[] jjbitVec7 = {
   0xffffffffffffdffeL, 0xffffffffdffeffffL, 0xffffffffffff0003L, 0x33fcfffffff199fL
};
static final long[] jjbitVec8 = {
   0xfffe000000000000L, 0xfffffffe027fffffL, 0x7fL, 0x707ffffff0000L
};
static final long[] jjbitVec9 = {
   0x7fffffe00000000L, 0xfffe0000000007feL, 0x7cffffffffffffffL, 0x60002f7fffL
};
static final long[] jjbitVec10 = {
   0x23ffffffffffffe0L, 0x3ff000000L, 0x3c5fdfffff99fe0L, 0x30003b0000000L
};
static final long[] jjbitVec11 = {
   0x36dfdfffff987e0L, 0x1c00005e000000L, 0x23edfdfffffbafe0L, 0x100000000L
};
static final long[] jjbitVec12 = {
   0x23cdfdfffff99fe0L, 0x3b0000000L, 0x3bfc718d63dc7e0L, 0x0L
};
static final long[] jjbitVec13 = {
   0x3effdfffffddfe0L, 0x300000000L, 0x3effdfffffddfe0L, 0x340000000L
};
static final long[] jjbitVec14 = {
   0x3fffdfffffddfe0L, 0x300000000L, 0x0L, 0x0L
};
static final long[] jjbitVec15 = {
   0xd7ffffffffffeL, 0x3fL, 0x200d6caefef02596L, 0x1fL
};
static final long[] jjbitVec16 = {
   0x0L, 0x3fffffffeffL, 0x0L, 0x0L
};
static final long[] jjbitVec17 = {
   0x0L, 0x0L, 0xffffffff00000000L, 0x7fffffffff003fL
};
static final long[] jjbitVec18 = {
   0x500000000007daedL, 0x2c62ab82315001L, 0xf580c90040000000L, 0x201080000000007L
};
static final long[] jjbitVec19 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffff0fffffffL, 0x3ffffffffffffffL
};
static final long[] jjbitVec20 = {
   0xffffffff3f3fffffL, 0x3fffffffaaff3f3fL, 0x5fdfffffffffffffL, 0x1fdc1fff0fcf1fdcL
};
static final long[] jjbitVec21 = {
   0x4c4000000000L, 0x0L, 0x7L, 0x0L
};
static final long[] jjbitVec22 = {
   0x3fe00000080L, 0xfffffffffffffffeL, 0xfffffffe001fffffL, 0x7ffffffffffffffL
};
static final long[] jjbitVec23 = {
   0x1fffffffffe0L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec24 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x3fffffffffL, 0x0L
};
static final long[] jjbitVec25 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffL, 0x0L
};
static final long[] jjbitVec26 = {
   0x0L, 0x0L, 0x80000000000000L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec27 = {
   0xffffffL, 0xffffffffffff0000L, 0xf80001ffffffffffL, 0x30003L
};
static final long[] jjbitVec28 = {
   0xffffffffffffffffL, 0x30000003fL, 0xfffffffbffffd7c0L, 0xffffd547f7fffL
};
static final long[] jjbitVec29 = {
   0xffffffffffffdffeL, 0xffffffffdffeffffL, 0xffffffffffff007bL, 0x33fcfffffff199fL
};
static final long[] jjbitVec30 = {
   0xfffe000000000000L, 0xfffffffe027fffffL, 0xbbfffffbfffe007fL, 0x707ffffff0016L
};
static final long[] jjbitVec31 = {
   0x7fffffe00000000L, 0xffff03ff0007ffffL, 0x7cffffffffffffffL, 0x3ff3dffffef7fffL
};
static final long[] jjbitVec32 = {
   0xf3ffffffffffffeeL, 0xffcfff1e3fffL, 0xd3c5fdfffff99feeL, 0x3ffcfb080399fL
};
static final long[] jjbitVec33 = {
   0xd36dfdfffff987e4L, 0x1fffc05e003987L, 0xf3edfdfffffbafeeL, 0xffc100003bbfL
};
static final long[] jjbitVec34 = {
   0xf3cdfdfffff99feeL, 0xffc3b0c0398fL, 0xc3bfc718d63dc7ecL, 0xff8000803dc7L
};
static final long[] jjbitVec35 = {
   0xc3effdfffffddfeeL, 0xffc300603ddfL, 0xc3effdfffffddfecL, 0xffc340603ddfL
};
static final long[] jjbitVec36 = {
   0xc3fffdfffffddfecL, 0xffc300803dcfL, 0x0L, 0x0L
};
static final long[] jjbitVec37 = {
   0x7ff7ffffffffffeL, 0x3ff7fffL, 0x3bff6caefef02596L, 0x3ff3f5fL
};
static final long[] jjbitVec38 = {
   0xc2a0000003000000L, 0xfffe03fffffffeffL, 0x2fe3ffffebf0fdfL, 0x0L
};
static final long[] jjbitVec39 = {
   0x0L, 0x3ffL, 0xffffffff00000000L, 0x7fffffffff003fL
};
static final long[] jjbitVec40 = {
   0x0L, 0x0L, 0x0L, 0x21fff0000L
};
static final long[] jjbitVec41 = {
   0x3efffe000000a0L, 0xfffffffffffffffeL, 0xfffffffe661fffffL, 0x77ffffffffffffffL
};
static final long[] jjbitVec42 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 202;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 85:
               case 65:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 202:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 34)
                  {
                     if (kind > 57)
                        kind = 57;
                  }
                  break;
               case 203:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 52)
                        kind = 52;
                     jjCheckNAddStates(3, 8);
                  }
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(200, 201);
                  else if (curChar == 34)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  else if (curChar == 46)
                     jjAddStates(9, 10);
                  break;
               case 0:
                  if (curChar == 58)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if ((0xfbffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 58)
                     jjCheckNAddStates(11, 13);
                  break;
               case 3:
                  if ((0xfbfffdffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 2);
                  break;
               case 4:
                  if ((0xfbffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 2);
                  break;
               case 5:
                  if (curChar == 41 && kind > 5)
                     kind = 5;
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 68:
                  if (curChar == 34)
                     jjCheckNAddStates(0, 2);
                  break;
               case 69:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 71:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 72:
                  if (curChar == 34 && kind > 57)
                     kind = 57;
                  break;
               case 73:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(14, 17);
                  break;
               case 74:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 75:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 76:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(74);
                  break;
               case 77:
                  if (curChar == 46)
                     jjAddStates(9, 10);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAddStates(3, 8);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  jjCheckNAdd(190);
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(191, 192);
                  break;
               case 192:
                  if (curChar != 46)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(193);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(193);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(18, 20);
                  break;
               case 195:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(196, 197);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(196, 197);
                  break;
               case 198:
                  if ((0x280000000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 199:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(200, 201);
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(200);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(201, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 85:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     jjCheckNAdd(65);
                  }
                  if (curChar == 114)
                  {
                     if (kind > 15)
                        kind = 15;
                  }
                  else if (curChar == 82)
                  {
                     if (kind > 15)
                        kind = 15;
                  }
                  break;
               case 202:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 92)
                     jjAddStates(21, 23);
                  break;
               case 203:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     jjCheckNAdd(65);
                  }
                  if (curChar == 114)
                  {
                     if (kind > 15)
                        kind = 15;
                  }
                  break;
               case 6:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 50)
                        kind = 50;
                     jjCheckNAdd(65);
                  }
                  else if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 64;
                  if ((0x7eL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(67);
                  }
                  else if ((0x7e00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  else if (curChar == 77)
                     jjAddStates(24, 25);
                  else if (curChar == 109)
                     jjAddStates(26, 27);
                  else if (curChar == 79)
                     jjCheckNAddTwoStates(85, 7);
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 61;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 58;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 55;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 53;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 51;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 29;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 26;
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 111)
                     jjCheckNAdd(7);
                  if (curChar == 68)
                     jjAddStates(28, 30);
                  else if (curChar == 100)
                     jjAddStates(31, 33);
                  else if (curChar == 65)
                     jjAddStates(34, 37);
                  else if (curChar == 67)
                     jjAddStates(38, 39);
                  else if (curChar == 99)
                     jjAddStates(40, 41);
                  else if (curChar == 97)
                     jjAddStates(42, 44);
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 1:
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
               case 4:
                  jjCheckNAddTwoStates(4, 2);
                  break;
               case 7:
                  if (curChar == 114 && kind > 15)
                     kind = 15;
                  break;
               case 8:
                  if (curChar == 111)
                     jjCheckNAdd(7);
                  break;
               case 9:
                  if (curChar == 110 && kind > 18)
                     kind = 18;
                  break;
               case 10:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 78 && kind > 18)
                     kind = 18;
                  break;
               case 15:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 114 && kind > 21)
                     kind = 21;
                  break;
               case 20:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 82 && kind > 21)
                     kind = 21;
                  break;
               case 23:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 116 && kind > 22)
                     kind = 22;
                  break;
               case 26:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 84 && kind > 22)
                     kind = 22;
                  break;
               case 29:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 101 && kind > 23)
                     kind = 23;
                  break;
               case 32:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 69 && kind > 23)
                     kind = 23;
                  break;
               case 37:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 110 && kind > 24)
                     kind = 24;
                  break;
               case 42:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 78 && kind > 24)
                     kind = 24;
                  break;
               case 48:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 110 && kind > 25)
                     kind = 25;
                  break;
               case 54:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 78 && kind > 25)
                     kind = 25;
                  break;
               case 56:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 109 && kind > 49)
                     kind = 49;
                  break;
               case 58:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 77 && kind > 49)
                     kind = 49;
                  break;
               case 61:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 64)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 65:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 66:
                  if ((0x7e00000000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 67:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(67);
                  break;
               case 69:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 70:
                  if (curChar == 92)
                     jjAddStates(21, 23);
                  break;
               case 71:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 78:
                  if (curChar == 108 && kind > 41)
                     kind = 41;
                  break;
               case 79:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 76 && kind > 41)
                     kind = 41;
                  break;
               case 82:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 79)
                     jjCheckNAddTwoStates(85, 7);
                  break;
               case 86:
                  if (curChar == 97)
                     jjAddStates(42, 44);
                  break;
               case 87:
                  if (curChar == 100 && kind > 16)
                     kind = 16;
                  break;
               case 88:
               case 130:
                  if (curChar == 110)
                     jjCheckNAdd(87);
                  break;
               case 89:
                  if (curChar == 103 && kind > 43)
                     kind = 43;
                  break;
               case 90:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 103 && kind > 48)
                     kind = 48;
                  break;
               case 98:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 99)
                     jjAddStates(40, 41);
                  break;
               case 100:
                  if (curChar == 110 && kind > 40)
                     kind = 40;
                  break;
               case 101:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 116 && kind > 45)
                     kind = 45;
                  break;
               case 110:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 67)
                     jjAddStates(38, 39);
                  break;
               case 114:
                  if (curChar == 78 && kind > 40)
                     kind = 40;
                  break;
               case 115:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 84 && kind > 45)
                     kind = 45;
                  break;
               case 124:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 65)
                     jjAddStates(34, 37);
                  break;
               case 128:
                  if (curChar == 68 && kind > 16)
                     kind = 16;
                  break;
               case 129:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 131:
                  if (curChar == 71 && kind > 43)
                     kind = 43;
                  break;
               case 132:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 71 && kind > 48)
                     kind = 48;
                  break;
               case 140:
                  if (curChar == 86)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 100)
                     jjAddStates(31, 33);
                  break;
               case 142:
                  if (curChar == 99 && kind > 40)
                     kind = 40;
                  break;
               case 143:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 116 && kind > 40)
                     kind = 40;
                  break;
               case 145:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 103 && kind > 44)
                     kind = 44;
                  break;
               case 152:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 68)
                     jjAddStates(28, 30);
                  break;
               case 161:
                  if (curChar == 67 && kind > 40)
                     kind = 40;
                  break;
               case 162:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 84 && kind > 40)
                     kind = 40;
                  break;
               case 164:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 71 && kind > 44)
                     kind = 44;
                  break;
               case 171:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 109)
                     jjAddStates(26, 27);
                  break;
               case 180:
                  if (curChar == 120 && kind > 46)
                     kind = 46;
                  break;
               case 181:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 110 && kind > 47)
                     kind = 47;
                  break;
               case 183:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 77)
                     jjAddStates(24, 25);
                  break;
               case 185:
                  if (curChar == 88 && kind > 46)
                     kind = 46;
                  break;
               case 186:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 78 && kind > 47)
                     kind = 47;
                  break;
               case 188:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 197:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjstateSet[jjnewStateCnt++] = 198;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 85:
               case 65:
                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 202:
               case 69:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 2);
                  break;
               case 203:
                  if (!jjCanMove_2(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 6:
               case 64:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(65);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(4, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 202 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   69, 70, 72, 190, 191, 192, 194, 195, 197, 80, 83, 2, 3, 5, 69, 70, 
   74, 72, 194, 195, 197, 71, 73, 75, 186, 188, 181, 183, 162, 169, 178, 143, 
   150, 159, 129, 130, 138, 140, 122, 126, 108, 112, 88, 96, 98, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec0[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec3[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec7[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec8[i2] & l2) != 0L);
      case 6:
         return ((jjbitVec9[i2] & l2) != 0L);
      case 9:
         return ((jjbitVec10[i2] & l2) != 0L);
      case 10:
         return ((jjbitVec11[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec12[i2] & l2) != 0L);
      case 12:
         return ((jjbitVec13[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec14[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec15[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec16[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec17[i2] & l2) != 0L);
      case 17:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 30:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec20[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec21[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec22[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec23[i2] & l2) != 0L);
      case 159:
         return ((jjbitVec24[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec25[i2] & l2) != 0L);
      default : 
         if ((jjbitVec1[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec26[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec27[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec28[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec29[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec30[i2] & l2) != 0L);
      case 6:
         return ((jjbitVec31[i2] & l2) != 0L);
      case 9:
         return ((jjbitVec32[i2] & l2) != 0L);
      case 10:
         return ((jjbitVec33[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec34[i2] & l2) != 0L);
      case 12:
         return ((jjbitVec35[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec36[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec37[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec38[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec39[i2] & l2) != 0L);
      case 17:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 30:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec20[i2] & l2) != 0L);
      case 32:
         return ((jjbitVec40[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec21[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec41[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec23[i2] & l2) != 0L);
      case 159:
         return ((jjbitVec24[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec25[i2] & l2) != 0L);
      default : 
         if ((jjbitVec1[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec0[i2] & l2) != 0L);
      default : 
         if ((jjbitVec42[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, "\73", "\54", "\75", "\50", "\51", "\133", 
"\135", "\173", "\175", null, null, "\174", null, "\53", "\55", null, null, null, null, 
null, "\72\75", "\57", "\57\57", "\44", "\74", "\74\57", "\74\75", "\76", "\57\76", 
"\76\75", "\41\75", "\137", "\47", "\42", null, null, "\100", null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, "\157\162\144\145\162\40\142\171", 
"\117\122\104\105\122\40\102\131", };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0x3b7ffffffffffe1L, 0x6L, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[202];
private final int[] jjstateSet = new int[404];
protected char curChar;
public XQueryParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public XQueryParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 202; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

}
